{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\horne\\\\Documents\\\\SeniorProject\\\\ehr\\\\client\\\\src\\\\layout\\\\NavBar.js\";\nimport React from 'react';\nimport { Navbar as HospitalRunNavbar } from '@hospitalrun/components';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NavBar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"React\",\n      isUserAuthenticated: false,\n      redirect: false\n    };\n  }\n\n  checkLogin() {\n    const isAuth = sessionStorage.getItem(\"accessToken\");\n\n    if (!isAuth) {\n      this.setState.isUserAuthenticated = false;\n      let logoutButton = '';\n    } else {\n      this.setState.isUserAuthenticated = true;\n      console.log(\"line 24\");\n      let logoutButton = {\n        type: 'link',\n        className: 'logout',\n        label: 'Logout',\n        onClick: () => {\n          if (window.confirm('Are you sure you wish to logout?')) {\n            this.logout();\n          }\n        }\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.checkLogin();\n  }\n\n  componentDidUpdate() {\n    this.checkLogin();\n  }\n\n  logout() {\n    sessionStorage.removeItem(\"accessToken\");\n    sessionStorage.removeItem(\"user\");\n    this.setState.isUserAuthenticated = false;\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      this.setState({\n        redirect: false\n      });\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/loggedOut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this);\n    }\n\n    const logoutButton = {\n      type: 'link',\n      className: 'logout',\n      label: 'Logout',\n      onClick: () => {\n        if (window.confirm('Are you sure you wish to logout?')) {\n          this.logout();\n        }\n      }\n    };\n\n    if (this.state.isUserAuthenticated) {\n      const logoutButton = {\n        type: 'link',\n        className: 'logout',\n        label: 'Logout',\n        onClick: () => {\n          if (window.confirm('Are you sure you wish to logout?')) {\n            this.logout();\n          }\n        }\n      };\n    } else {\n      let logoutButton = '';\n    }\n\n    return /*#__PURE__*/_jsxDEV(HospitalRunNavbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      navItems: [{\n        type: 'link-list-icon',\n        label: '',\n        name: 'menu',\n        size: 'lg',\n        iconClassName: 'align-bottom',\n        children: [{\n          type: 'link',\n          label: 'Patient Dashboard',\n          href: '/dashboard'\n        }, {\n          type: 'link',\n          label: 'History',\n          href: '/history'\n        }, {\n          type: 'link',\n          label: 'Imaging'\n        }, {\n          type: 'link',\n          label: 'Labs'\n        }, {\n          type: 'link',\n          label: 'Care Plan'\n        }, {\n          type: 'link',\n          label: 'Order Entry',\n          dividerAbove: true\n        }, {\n          type: 'link',\n          label: 'Vitals',\n          dividerAbove: true\n        }, {\n          type: 'link',\n          label: 'Weight'\n        }, {\n          type: 'link',\n          label: 'Pain'\n        }, {\n          type: 'link',\n          label: 'Input'\n        }, {\n          type: 'link',\n          label: 'Output'\n        }]\n      }, {\n        type: 'header',\n        label: 'Clark State EHR'\n      }, logoutButton]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/horne/Documents/SeniorProject/ehr/client/src/layout/NavBar.js"],"names":["React","Navbar","HospitalRunNavbar","Navigate","NavBar","Component","constructor","state","name","isUserAuthenticated","redirect","checkLogin","isAuth","sessionStorage","getItem","setState","logoutButton","console","log","type","className","label","onClick","window","confirm","logout","componentDidMount","componentDidUpdate","removeItem","render","size","iconClassName","children","href","dividerAbove"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Navbar as HospitalRunNavbar} from '@hospitalrun/components'\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nclass NavBar extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        name: \"React\",\r\n        isUserAuthenticated: false,\r\n        redirect: false\r\n      };\r\n    }\r\n\r\n    checkLogin() {\r\n      const isAuth = sessionStorage.getItem(\"accessToken\");\r\n      if(!isAuth){\r\n          this.setState.isUserAuthenticated = false;\r\n          let logoutButton = ''\r\n      }else{\r\n        this.setState.isUserAuthenticated = true;\r\n        console.log(\"line 24\")\r\n        let logoutButton = {\r\n          type: 'link',\r\n          className: 'logout',\r\n          label: 'Logout',\r\n          onClick: () => { \r\n            if (window.confirm('Are you sure you wish to logout?')){\r\n              this.logout()\r\n            }  \r\n          } \r\n        }\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkLogin()\r\n    }\r\n    componentDidUpdate() {\r\n      this.checkLogin()\r\n  }\r\n    logout(){\r\n      sessionStorage.removeItem(\"accessToken\");\r\n      sessionStorage.removeItem(\"user\");\r\n      this.setState.isUserAuthenticated = false;\r\n      this.setState({ redirect: true })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n          this.setState({ redirect: false });\r\n          return <Navigate  to=\"/loggedOut\" />;\r\n        }\r\n        const logoutButton = {\r\n          type: 'link',\r\n          className: 'logout',\r\n          label: 'Logout',\r\n          onClick: () => { \r\n            if (window.confirm('Are you sure you wish to logout?')){\r\n              this.logout()\r\n            }  \r\n          } \r\n        }\r\n        \r\n        if(this.state.isUserAuthenticated){\r\n          \r\n          const logoutButton = {\r\n            type: 'link',\r\n            className: 'logout',\r\n            label: 'Logout',\r\n            onClick: () => { \r\n              if (window.confirm('Are you sure you wish to logout?')){\r\n                this.logout()\r\n              }  \r\n            } \r\n          }\r\n        } else {\r\n          let logoutButton = ''\r\n        }\r\n        return (\r\n             \r\n                <HospitalRunNavbar\r\n                  bg=\"dark\"\r\n                  variant=\"dark\"\r\n                  navItems={[\r\n                    {\r\n                      type: 'link-list-icon',\r\n                      label: '',\r\n                      name: 'menu',\r\n                      size: 'lg',\r\n                      iconClassName: 'align-bottom',\r\n                      children: [\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Patient Dashboard',\r\n                          href: '/dashboard',\r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'History',\r\n                          href: '/history',\r\n                        \r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Imaging',\r\n                         \r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Labs',\r\n                         \r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Care Plan',\r\n                         \r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Order Entry',\r\n                          dividerAbove: true,\r\n\r\n                          \r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Vitals',\r\n                          dividerAbove: true,\r\n\r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Weight',\r\n                          \r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Pain',\r\n                          \r\n                        },\r\n                        {\r\n                          type: 'link',\r\n                          label: 'Input',\r\n                         \r\n                        },\r\n                        {\r\n                            type: 'link',\r\n                            label: 'Output',\r\n                           \r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      type: 'header',\r\n                      label: 'Clark State EHR',\r\n                      \r\n                    },logoutButton\r\n                  ]}\r\n                />\r\n                \r\n              \r\n        );\r\n       \r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}