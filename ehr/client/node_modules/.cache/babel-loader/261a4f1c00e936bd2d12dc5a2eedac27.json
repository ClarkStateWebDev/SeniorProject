{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\horne\\\\Documents\\\\SeniorProject\\\\ehr\\\\client\\\\src\\\\pages\\\\login\\\\forgotPassword.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst title = {\n  pageTitle: 'Forgot Password Screen'\n};\n\nclass ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.sendEmail = async e => {\n      e.preventDefault();\n      const {\n        email\n      } = this.state;\n\n      if (email === '') {\n        this.setState({\n          showError: false,\n          messageFromServer: '',\n          showNullError: true\n        });\n      } else {\n        try {\n          const response = await Axios.post('http://localhost:3001/forgotPassword', {\n            email\n          });\n          console.log(response.data);\n\n          if (response.data === 'recovery email sent') {\n            this.setState({\n              showError: false,\n              messageFromServer: 'recovery email sent',\n              showNullError: false\n            });\n          }\n        } catch (error) {\n          console.error(error.response.data);\n\n          if (error.response.data === 'email not in db') {\n            this.setState({\n              showError: true,\n              messageFromServer: '',\n              showNullError: false\n            });\n          }\n        }\n      }\n    };\n\n    this.showError = bool => {\n      this.setState({\n        showError: bool\n      });\n    };\n\n    this.state = {\n      email: '',\n      showError: false,\n      messageFromServer: '',\n      showNullError: false\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Clark State EHR Forgot Password\";\n  }\n\n  render() {\n    const {\n      email,\n      messageFromServer,\n      showNullError,\n      showError\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"img/EHRLogo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.sendEmail,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 4,\n            className: \"align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"Email\",\n                name: \"email\",\n                placeholder: \"Enter Email\",\n                required: true,\n                onChange: this.handleChange('email')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"We'll send a recovery email to this address.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 2,\n            className: \"align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"mb-4\",\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Send Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              className: \"mb-3\",\n              variant: \"link\",\n              onClick: () => {\n                window.location.href = '/login';\n              },\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), showNullError && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), showError && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => this.showError(false),\n          dismissible: true,\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Oh snap! You got an error!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"That email address isn't recognized. Please try again or register for a new account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), messageFromServer === 'recovery email sent' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Success!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password Reset Email Successfully Sent!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Users/horne/Documents/SeniorProject/ehr/client/src/pages/login/forgotPassword.js"],"names":["React","Component","Axios","Form","Button","Row","Col","Alert","title","pageTitle","ForgotPassword","constructor","handleChange","name","event","setState","target","value","sendEmail","e","preventDefault","email","state","showError","messageFromServer","showNullError","response","post","console","log","data","error","bool","componentDidMount","document","render","window","location","href"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Alert  from 'react-bootstrap/Alert';\r\nconst title = {\r\n  pageTitle: 'Forgot Password Screen',\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: '',\r\n      showError: false,\r\n      messageFromServer: '',\r\n      showNullError: false,\r\n    };\r\n  }\r\n\r\n  handleChange = name => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  sendEmail = async (e) => {\r\n    e.preventDefault();\r\n    const { email } = this.state;\r\n    if (email === '') {\r\n      this.setState({\r\n        showError: false,\r\n        messageFromServer: '',\r\n        showNullError: true,\r\n      });\r\n    } else {\r\n      try {\r\n        const response = await Axios.post(\r\n          'http://localhost:3001/forgotPassword',\r\n          {\r\n            email,\r\n          },\r\n        );\r\n        console.log(response.data);\r\n        if (response.data === 'recovery email sent') {\r\n          this.setState({\r\n            showError: false,\r\n            messageFromServer: 'recovery email sent',\r\n            showNullError: false,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error.response.data);\r\n        if (error.response.data === 'email not in db') {\r\n          this.setState({\r\n            showError: true,\r\n            messageFromServer: '',\r\n            showNullError: false,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  showError = (bool) => {\r\n    this.setState(\r\n      {showError: bool}\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"Clark State EHR Forgot Password\";\r\n  }\r\n\r\n\r\n  render() {\r\n    const { email, messageFromServer, showNullError, showError } = this.state;\r\n    return (\r\n      <div class=\"container text-center\"> \r\n        <img src=\"img/EHRLogo.png\" alt=\"logo\"></img>\r\n        <Form onSubmit={this.sendEmail}>\r\n          <Row className=\"justify-content-center\">\r\n            <Col sm={4} className=\"align-items-center\">\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control type=\"Email\" name=\"email\" placeholder=\"Enter Email\" required onChange={this.handleChange('email')}/>\r\n              <Form.Text className=\"text-muted\">\r\n                We'll send a recovery email to this address.\r\n              </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n              <Col sm={2} className=\"align-items-center\">\r\n                  <Button className=\"mb-4\"  variant=\"primary\" type=\"submit\">\r\n                      Send Email\r\n                  </Button>\r\n                  <Button size=\"sm\" className=\"mb-3\" variant=\"link\" onClick={() => {window.location.href = '/login'; }}>\r\n                    Log In\r\n                  </Button>   \r\n              </Col>\r\n          </Row>       \r\n        </Form>\r\n        \r\n        \r\n        \r\n       {/*  <form className=\"form profile-form\" onSubmit={this.sendEmail}>\r\n            <div class=\"form-group\">\r\n                <label for=\"Email\">Email</label>\r\n                <input type=\"Email\" name=\"email\" placeholder=\"Enter Email\" required onChange={this.handleChange('email')}></input>\r\n            </div>    \r\n            <div class=\"form-group\">\r\n                <button type=\"submit\">Send Email</button>\r\n            </div> \r\n        </form> */}\r\n\r\n        {showNullError && (\r\n          <>{/* <Alert variant=\"danger\" onClose={() => setShowError(false)} dismissible>\r\n              <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n              <p>\r\n                The email address cannot be null.\r\n              </p>\r\n            </Alert> */}\r\n          </>\r\n        )}\r\n        {showError && (\r\n        <>\r\n          <Alert variant=\"danger\" onClose={() => this.showError(false)} dismissible>\r\n            <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n            <p>\r\n                That email address isn&apos;t recognized. Please try again or\r\n                register for a new account.\r\n            </p>\r\n          </Alert>\r\n        </>\r\n        )}\r\n        {messageFromServer === 'recovery email sent' && (\r\n        <>\r\n          <Alert variant=\"success\">\r\n            <Alert.Heading>Success!</Alert.Heading>\r\n            <p>\r\n              Password Reset Email Successfully Sent!\r\n            </p>\r\n          </Alert>            \r\n        </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}