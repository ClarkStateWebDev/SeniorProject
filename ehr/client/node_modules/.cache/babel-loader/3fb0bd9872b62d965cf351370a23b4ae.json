{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\horne\\\\Documents\\\\SeniorProject\\\\ehr\\\\client\\\\src\\\\pages\\\\login\\\\ResetPassword.js\";\n\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst loading = {\n  margin: '1em',\n  fontSize: '24px'\n};\nconst title = {\n  pageTitle: 'Password Reset Screen'\n};\nexport default class ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.updatePassword = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        match: {\n          params: {\n            token\n          }\n        }\n      } = this.props;\n\n      try {\n        const response = await Axios.put('http://localhost:3001/updatePasswordViaEmail', {\n          email,\n          password,\n          resetPasswordToken: token\n        });\n        console.log(response.data);\n\n        if (response.data.message === 'password updated') {\n          this.setState({\n            updated: true,\n            error: false\n          });\n        } else {\n          this.setState({\n            updated: false,\n            error: true\n          });\n        }\n      } catch (error) {\n        console.log(error.response.data);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      updated: false,\n      isLoading: true,\n      error: false\n    };\n  }\n\n  async componentDidMount() {\n    document.title = \"Clark State EHR Reset Password\";\n    const {\n      match: {\n        params: {\n          token\n        }\n      }\n    } = this.props;\n\n    try {\n      const response = await Axios.get('http://localhost:3001/reset', {\n        params: {\n          resetPasswordToken: token\n        }\n      });\n      console.log(response);\n\n      if (response.data.message === 'password reset link a-ok') {\n        this.setState({\n          email: response.data.email,\n          updated: false,\n          isLoading: false,\n          error: false\n        });\n      }\n    } catch (error) {\n      console.log(error.response.data);\n      this.setState({\n        updated: false,\n        isLoading: false,\n        error: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      password,\n      error,\n      isLoading,\n      updated\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title.pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"justify-content-center\",\n          style: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Problem resetting password. Please send another reset link.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            className: \"mb-3\",\n            variant: \"link\",\n            onClick: () => {\n              window.location.href = '/forgotPassword';\n            },\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [title.pageTitle, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: loading,\n          children: \"Loading User Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this);\n    } //let path = window.location.pathname.split(\"/\")[1]\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../img/EHRLogo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 56\n      }, this), !updated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title.pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.updatePassword,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 4,\n              className: \"align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  id: \"password\",\n                  name: \"password\",\n                  placeholder: \"New Password\",\n                  required: true,\n                  onChange: this.handleChange('password'),\n                  value: password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 2,\n              className: \"align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"mb-4\",\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Update Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your password has been successfully reset, please try logging in again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          className: \"mb-3\",\n          variant: \"primary\",\n          onClick: () => {\n            window.location.href = '/login';\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nResetPassword.propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      token: PropTypes.string.isRequired\n    })\n  })\n};","map":{"version":3,"sources":["C:/Users/horne/Documents/SeniorProject/ehr/client/src/pages/login/ResetPassword.js"],"names":["React","Component","PropTypes","Axios","Form","Button","Row","Col","Alert","loading","margin","fontSize","title","pageTitle","ResetPassword","constructor","handleChange","name","event","setState","target","value","updatePassword","e","preventDefault","email","password","state","match","params","token","props","response","put","resetPasswordToken","console","log","data","message","updated","error","isLoading","componentDidMount","document","get","render","window","location","href","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Alert  from 'react-bootstrap/Alert';\r\n\r\nconst loading = {\r\n  margin: '1em',\r\n  fontSize: '24px',\r\n};\r\n\r\nconst title = {\r\n  pageTitle: 'Password Reset Screen',\r\n};\r\n\r\nexport default class ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      updated: false,\r\n      isLoading: true,\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    document.title = \"Clark State EHR Reset Password\";\r\n    const {\r\n      match: {\r\n        params: { token },\r\n      },\r\n    } = this.props;\r\n    try {\r\n      const response = await Axios.get('http://localhost:3001/reset', {\r\n        params: {\r\n          resetPasswordToken: token,\r\n        },\r\n      });\r\n      console.log(response);\r\n      if (response.data.message === 'password reset link a-ok') {\r\n        this.setState({\r\n          email: response.data.email,\r\n          updated: false,\r\n          isLoading: false,\r\n          error: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      this.setState({\r\n        updated: false,\r\n        isLoading: false,\r\n        error: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = name => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  updatePassword = async (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const {\r\n      match: {\r\n        params: { token },\r\n      },\r\n    } = this.props;\r\n    try {\r\n      const response = await Axios.put(\r\n        'http://localhost:3001/updatePasswordViaEmail',\r\n        {\r\n          email,\r\n          password,\r\n          resetPasswordToken: token,\r\n        },\r\n      );\r\n      console.log(response.data);\r\n      if (response.data.message === 'password updated') {\r\n        this.setState({\r\n          updated: true,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          updated: false,\r\n          error: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n password, error, isLoading, updated \r\n} = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <div class=\"container text-center\">\r\n          <h1>{title.pageTitle}</h1>  \r\n          <div className=\"justify-content-center\" style={loading}>\r\n            <h4>Problem resetting password. Please send another reset link.</h4>\r\n            <Button size=\"sm\" className=\"mb-3\" variant=\"link\" onClick={() => {window.location.href = '/forgotPassword'; }}>\r\n              Forgot Password\r\n            </Button> \r\n          </div>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n    if (isLoading) {\r\n      return (\r\n        <div >\r\n          {title.pageTitle}\r\n          <div style={loading}>Loading User Data...</div>\r\n        </div>\r\n      );\r\n    }\r\n    //let path = window.location.pathname.split(\"/\")[1]\r\n    \r\n    return (\r\n      <div class=\"container text-center\">\r\n        <img src=\"../img/EHRLogo.png\" alt=\"logo\"></img><br></br>\r\n        {!updated ?\r\n         ( <><h2>{title.pageTitle}</h2><Form onSubmit={this.updatePassword}>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={4} className=\"align-items-center\">\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>New Password</Form.Label>\r\n                  <Form.Control type=\"password\" id=\"password\" name=\"password\" placeholder=\"New Password\" required onChange={this.handleChange('password')} value={password} />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col sm={2} className=\"align-items-center\">\r\n                <Button className=\"mb-4\" variant=\"primary\" type=\"submit\">\r\n                  Update Password\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form></>): (\r\n          <div class=\"container text-center\">\r\n            <p>\r\n              Your password has been successfully reset, please try logging in\r\n              again.\r\n            </p>\r\n            <Button size=\"sm\" className=\"mb-3\" variant=\"primary\" onClick={() => {window.location.href = '/login'; }}>\r\n              Login \r\n            </Button> \r\n          </div>\r\n        )\r\n        }\r\n        \r\n{/* \r\n        {updated && (\r\n          <div class=\"container text-center\">\r\n            <p>\r\n              Your password has been successfully reset, please try logging in\r\n              again.\r\n            </p>\r\n            <Button size=\"sm\" className=\"mb-3\" variant=\"primary\" onClick={() => {window.location.href = '/login'; }}>\r\n              Login \r\n            </Button> \r\n          </div>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n  // eslint-disable-next-line react/require-default-props\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      token: PropTypes.string.isRequired,\r\n    }),\r\n  }),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}